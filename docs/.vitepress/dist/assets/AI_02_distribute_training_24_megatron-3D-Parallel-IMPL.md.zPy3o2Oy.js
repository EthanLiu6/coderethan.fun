import{_ as i,c as a,o as t,a2 as n}from"./chunks/framework.DA-Pb-tg.js";const g=JSON.parse('{"title":"1 megatron-lm 环境搭建","description":"","frontmatter":{},"headers":[],"relativePath":"AI/02_distribute_training/24_megatron-3D-Parallel-IMPL.md","filePath":"AI/02_distribute_training/24_megatron-3D-Parallel-IMPL.md","lastUpdated":1743069065000}'),e={name:"AI/02_distribute_training/24_megatron-3D-Parallel-IMPL.md"};function h(l,s,p,k,r,d){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="_1-megatron-lm-环境搭建" tabindex="-1">1 megatron-lm 环境搭建 <a class="header-anchor" href="#_1-megatron-lm-环境搭建" aria-label="Permalink to &quot;1 megatron-lm 环境搭建&quot;">​</a></h1><h2 id="_1-1-验证cuda版本" tabindex="-1">1.1 验证CUDA版本 <a class="header-anchor" href="#_1-1-验证cuda版本" aria-label="Permalink to &quot;1.1 验证CUDA版本&quot;">​</a></h2><p>nvcc --version # 应显示 11.x 版本 nvidia-smi # 确认驱动版本支持CUDA版本</p><h2 id="_1-2-安装基础编译工具" tabindex="-1">1.2 安装基础编译工具 <a class="header-anchor" href="#_1-2-安装基础编译工具" aria-label="Permalink to &quot;1.2 安装基础编译工具&quot;">​</a></h2><p>sudo apt-get update sudo apt-get install -y build-essential cmake ninja-build</p><h2 id="_1-3-安装python虚拟环境" tabindex="-1">1.3 安装python虚拟环境 <a class="header-anchor" href="#_1-3-安装python虚拟环境" aria-label="Permalink to &quot;1.3 安装python虚拟环境&quot;">​</a></h2><p>conda create -n megatron python=3.10 -y conda activate megatron</p><h2 id="_1-4-安装pytorch-需与cuda版本对应" tabindex="-1">1.4 安装PyTorch (需与CUDA版本对应) <a class="header-anchor" href="#_1-4-安装pytorch-需与cuda版本对应" aria-label="Permalink to &quot;1.4 安装PyTorch (需与CUDA版本对应)&quot;">​</a></h2><p>最新版本，带cuda</p><h2 id="_1-5-安装完整版cuda-带driver的安装" tabindex="-1">1.5 安装完整版cuda (带driver的安装) <a class="header-anchor" href="#_1-5-安装完整版cuda-带driver的安装" aria-label="Permalink to &quot;1.5 安装完整版cuda (带driver的安装)&quot;">​</a></h2><ul><li><a href="https://developer.nvidia.com/cuda-downloads" target="_blank" rel="noreferrer">下载地址</a></li></ul><p><em>注意：可以选择之前的版本号</em> <br></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://developer.download.nvidia.com/compute/cuda/12.4.0/local_installers/cuda_12.4.0_550.54.14_linux.run</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cuda_12.4.0_550.54.14_linux.run</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/usr/local/cuda-11.8/bin:$PATH</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LD_LIBRARY_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/usr/local/cuda-11.8/lib64:$LD_LIBRARY_PATH</span></span></code></pre></div><h2 id="_1-6-安装cudnn" tabindex="-1">1.6 安装cudnn <a class="header-anchor" href="#_1-6-安装cudnn" aria-label="Permalink to &quot;1.6 安装cudnn&quot;">​</a></h2><ul><li><a href="https://developer.nvidia.com/cudnn-downloads?target_os=Linux" target="_blank" rel="noreferrer">下载地址</a></li></ul><h2 id="_1-7-transformerengine-安装" tabindex="-1">1.7 TransformerEngine 安装 <a class="header-anchor" href="#_1-7-transformerengine-安装" aria-label="Permalink to &quot;1.7 TransformerEngine 安装&quot;">​</a></h2><ul><li><a href="https://github.com/NVIDIA/TransformerEngine" target="_blank" rel="noreferrer">安装指导</a></li></ul><h2 id="_1-8-安装apex" tabindex="-1">1.8 安装apex <a class="header-anchor" href="#_1-8-安装apex" aria-label="Permalink to &quot;1.8 安装apex&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/NVIDIA/apex</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apex</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># if pip &gt;= 23.1 (ref: https://pip.pypa.io/en/stable/news/#v23-1) which supports multiple \`--config-settings\` with the same key...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --disable-pip-version-check</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-cache-dir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-build-isolation</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config-settings</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;--build-option=--cpp_ext&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config-settings</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;--build-option=--cuda_ext&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># otherwise</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --disable-pip-version-check</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-cache-dir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-build-isolation</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global-option=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;--cpp_ext&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global-option=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;--cuda_ext&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./</span></span></code></pre></div><h1 id="_2-安装megatron-lm" tabindex="-1">2 安装Megatron-LM <a class="header-anchor" href="#_2-安装megatron-lm" aria-label="Permalink to &quot;2 安装Megatron-LM&quot;">​</a></h1><h2 id="_2-1-开发模式" tabindex="-1">2.1 开发模式 <a class="header-anchor" href="#_2-1-开发模式" aria-label="Permalink to &quot;2.1 开发模式&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setup.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> develop</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-cache-dir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /root/projects/Megatron-LM</span></span></code></pre></div><p><em>不保存下载的包到本地缓存目录。不重用之前缓存的包文件，强制从远程仓库重新下载。</em> <br></p><table tabindex="0"><thead><tr><th>特性</th><th><code>python setup.py build</code></th><th><code>pip install -e</code></th></tr></thead><tbody><tr><td><strong>安装位置</strong></td><td>不安装</td><td>安装到当前环境</td></tr><tr><td><strong>代码修改同步</strong></td><td>需重新安装</td><td>实时生效</td></tr><tr><td><strong>依赖管理</strong></td><td>不处理依赖</td><td>自动安装依赖项</td></tr><tr><td><strong>C扩展构建</strong></td><td>显式构建</td><td>自动触发构建</td></tr><tr><td><strong>虚拟环境兼容性</strong></td><td>需手动激活环境</td><td>自动识别当前环境</td></tr><tr><td><strong>现代Python推荐</strong></td><td>不推荐</td><td>推荐</td></tr></tbody></table><h1 id="_2-1-生产环境" tabindex="-1">2.1 生产环境 <a class="header-anchor" href="#_2-1-生产环境" aria-label="Permalink to &quot;2.1 生产环境&quot;">​</a></h1><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 直接安装（推荐）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或分步操作</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setup.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setup.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h1 id="_3-数据准备" tabindex="-1">3 数据准备 <a class="header-anchor" href="#_3-数据准备" aria-label="Permalink to &quot;3 数据准备&quot;">​</a></h1><h2 id="_3-1-下载数据集" tabindex="-1">3.1 下载数据集 <a class="header-anchor" href="#_3-1-下载数据集" aria-label="Permalink to &quot;3.1 下载数据集&quot;">​</a></h2><ul><li><a href="https://huggingface.co/datasets/mikasenghaas/wikitext-2/tree/main/data" target="_blank" rel="noreferrer">下载地址</a></li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://huggingface.co/datasets/mikasenghaas/wikitext-2/resolve/main/data/train-00000-of-00001.parquet</span></span></code></pre></div><p><strong>转为json格式</strong><br></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.read_parquet(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;train-00000-of-00001.parquet&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.to_json(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;output.json&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">orient</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;records&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">lines</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">force_ascii</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="_3-2-词汇表下载" tabindex="-1">3.2 词汇表下载 <a class="header-anchor" href="#_3-2-词汇表下载" aria-label="Permalink to &quot;3.2 词汇表下载&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://s3.amazonaws.com/models.huggingface.co/bert/gpt2-vocab.json</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://s3.amazonaws.com/models.huggingface.co/bert/gpt2-merges.txt</span></span></code></pre></div><h2 id="_3-3-数据预处理" tabindex="-1">3.3 数据预处理 <a class="header-anchor" href="#_3-3-数据预处理" aria-label="Permalink to &quot;3.3 数据预处理&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/projects/Megatron-LM</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tools/preprocess_data.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       --input</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-input.json</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       --output-prefix</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-gpt2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       --vocab-file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gpt2-vocab.json</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       --tokenizer-type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GPT2BPETokenizer</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       --merge-file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gpt2-merges.txt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       --append-eod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       --workers</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span></span></code></pre></div><h1 id="_4-启动训练" tabindex="-1">4 启动训练 <a class="header-anchor" href="#_4-启动训练" aria-label="Permalink to &quot;4 启动训练&quot;">​</a></h1><h2 id="_4-1-参数路径修改" tabindex="-1">4.1 参数路径修改 <a class="header-anchor" href="#_4-1-参数路径修改" aria-label="Permalink to &quot;4.1 参数路径修改&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CHECKPOINT_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/root/projects/Megatron-LM/checkpoints&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TENSORBOARD_LOGS_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/root/projects/Megatron-LM/tensorboard_file&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">VOCAB_FILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/root/projects/Megatron-LM/gpt2-vocab.json&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MERGE_FILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/root/projects/Megatron-LM/gpt2-merges.txt&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DATA_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/root/projects/Megatron-LM/my-gpt2_text_document&quot;</span></span></code></pre></div><h2 id="_4-2-训练参数修改" tabindex="-1">4.2 训练参数修改 <a class="header-anchor" href="#_4-2-训练参数修改" aria-label="Permalink to &quot;4.2 训练参数修改&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GPUS_PER_NODE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--num-layers</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 12</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--hidden-size </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">512</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--num-attention-heads </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--seq-length </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1024</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--tensor-model-parallel-size </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--pipeline-model-parallel-size </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span></code></pre></div><h2 id="_4-3-开始训练" tabindex="-1">4.3 开始训练 <a class="header-anchor" href="#_4-3-开始训练" aria-label="Permalink to &quot;4.3 开始训练&quot;">​</a></h2><p>bash train_gpt3_175b_distributed.sh</p>`,43)]))}const F=i(e,[["render",h]]);export{g as __pageData,F as default};
