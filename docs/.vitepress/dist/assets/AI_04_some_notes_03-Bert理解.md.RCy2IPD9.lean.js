import{_ as t,c as a,o as l,a2 as o}from"./chunks/framework.DA-Pb-tg.js";const u=JSON.parse('{"title":"03-Bert理解","description":"","frontmatter":{},"headers":[],"relativePath":"AI/04_some_notes/03-Bert理解.md","filePath":"AI/04_some_notes/03-Bert理解.md","lastUpdated":null}'),i={name:"AI/04_some_notes/03-Bert理解.md"};function r(n,e,s,d,c,m){return l(),a("div",null,e[0]||(e[0]=[o('<h1 id="_03-bert理解" tabindex="-1">03-Bert理解 <a class="header-anchor" href="#_03-bert理解" aria-label="Permalink to &quot;03-Bert理解&quot;">​</a></h1><h2 id="_1-预训练" tabindex="-1">1.预训练 <a class="header-anchor" href="#_1-预训练" aria-label="Permalink to &quot;1.预训练&quot;">​</a></h2><ul><li>masked language model 用来提取token向量</li><li>next sentence prediction 用来提取文本向量</li></ul><p><img src="https://coderethan-1327000741.cos.ap-chengdu.myqcloud.com/blog-pics/image-20250327181838063.png" alt="image-20250327181838063"></p><p><img src="https://coderethan-1327000741.cos.ap-chengdu.myqcloud.com/blog-pics/image-20250327183133577.png" alt="image-20250327183133577"></p><p>input 开头加cls，拼接第二个文本，中间和结尾加sep，cls可以提取这两个文本的语意连续性或者相关性</p><h2 id="_2-embedding" tabindex="-1">2. embedding <a class="header-anchor" href="#_2-embedding" aria-label="Permalink to &quot;2. embedding&quot;">​</a></h2><ol><li>word/token emb有点像word2vocter</li></ol><ul><li>对除特殊token外的特征向量的15%做随机替换这其中的： <ul><li>80%做mask</li><li>10%随机选一个</li><li>10%不变</li></ul></li><li>对这15%的做预测，得到mask的预测结果</li></ul>',9)]))}const _=t(i,[["render",r]]);export{u as __pageData,_ as default};
