import{_ as a,c as r,o as t,a2 as n}from"./chunks/framework.DA-Pb-tg.js";const m=JSON.parse('{"title":"1 什么是深度学习模型","description":"","frontmatter":{},"headers":[],"relativePath":"AI/deep_learning_theory/05-deep_learning_model/5-deep_learning_model.md","filePath":"AI/deep_learning_theory/05-deep_learning_model/5-deep_learning_model.md","lastUpdated":null}'),l={name:"AI/deep_learning_theory/05-deep_learning_model/5-deep_learning_model.md"};function o(d,e,i,s,_,p){return t(),r("div",null,e[0]||(e[0]=[n('<h1 id="_1-什么是深度学习模型" tabindex="-1">1 什么是深度学习模型 <a class="header-anchor" href="#_1-什么是深度学习模型" aria-label="Permalink to &quot;1 什么是深度学习模型&quot;">​</a></h1><p>        深度学习模型是一种机器学习模型，它由多个<strong>神经网络层(layer)</strong> 组成，这些层之间存在着多层的<strong>非线性转换关系</strong>。深度学习模型通过学习大量数据来提取和学习数据的高级特征表示，从而对输入数据进行分类、回归、生成等任务。<br></p><p>        工程上，常将<strong>神经网络层(layer)</strong> 抽象成计算机上可执行的<strong>算子</strong>如Conv2d、matmul、relu、sigmoid等，这些算子通过张量(Tensor)相互连接，组合成一张有向无环图，这个图就是我们常说的深度学习网络图，也称为深度学习模型图。<br></p><p>        指的主要的是，深度学习网络图中的算子有很多种类，有些算子并不能和 传统的 MLP中的神经网络层相对应，但也是很重要的，如reshape、permute、add、sconcat等。<br></p><h1 id="_2-下载一个预训练好的深度学习模型" tabindex="-1">2 下载一个预训练好的深度学习模型 <a class="header-anchor" href="#_2-下载一个预训练好的深度学习模型" aria-label="Permalink to &quot;2 下载一个预训练好的深度学习模型&quot;">​</a></h1><ul><li><a href="https://github.com/onnx/models" target="_blank" rel="noreferrer">深度学习预训练模型下载</a></li></ul><h1 id="_3-可视化这个深度学习模型" tabindex="-1">3 可视化这个深度学习模型 <a class="header-anchor" href="#_3-可视化这个深度学习模型" aria-label="Permalink to &quot;3 可视化这个深度学习模型&quot;">​</a></h1><ul><li><a href="https://netron.app/" target="_blank" rel="noreferrer">深度学习模型可视化</a></li></ul>',8)]))}const g=a(l,[["render",o]]);export{m as __pageData,g as default};
