import{_ as a,c as n,o as e,a2 as t}from"./chunks/framework.DA-Pb-tg.js";const d=JSON.parse('{"title":"1 代码介绍","description":"","frontmatter":{},"headers":[],"relativePath":"AI/deep_learning_theory/31-1stable-diffusion.md","filePath":"AI/deep_learning_theory/31-1stable-diffusion.md","lastUpdated":null}'),i={name:"AI/deep_learning_theory/31-1stable-diffusion.md"};function p(l,s,r,m,o,h){return e(),n("div",null,s[0]||(s[0]=[t(`<h1 id="_1-代码介绍" tabindex="-1">1 代码介绍 <a class="header-anchor" href="#_1-代码介绍" aria-label="Permalink to &quot;1 代码介绍&quot;">​</a></h1><p><a href="https://github.com/huggingface/diffusers" target="_blank" rel="noreferrer">代码仓库</a></p><h1 id="_2-代码复现步骤" tabindex="-1">2 代码复现步骤 <a class="header-anchor" href="#_2-代码复现步骤" aria-label="Permalink to &quot;2 代码复现步骤&quot;">​</a></h1><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/huggingface/diffusers.git</span></span></code></pre></div><h1 id="_3-stable-diffusion-整体结构" tabindex="-1">3 stable diffusion 整体结构 <a class="header-anchor" href="#_3-stable-diffusion-整体结构" aria-label="Permalink to &quot;3 stable diffusion 整体结构&quot;">​</a></h1><h2 id="_3-1-整体流程图" tabindex="-1">3.1 整体流程图 <a class="header-anchor" href="#_3-1-整体流程图" aria-label="Permalink to &quot;3.1 整体流程图&quot;">​</a></h2><p><img src="https://tianfeng.space/wp-content/uploads/2023/05/uTools_1685446263880-1.png" alt="sd 整体流程"></p><h2 id="_3-2-sd-训练流程图" tabindex="-1">3.2 sd 训练流程图 <a class="header-anchor" href="#_3-2-sd-训练流程图" aria-label="Permalink to &quot;3.2 sd 训练流程图&quot;">​</a></h2><p><img src="https://tianfeng.space/wp-content/uploads/2023/05/uTools_1685589094295.png" alt="训练流程图"></p><p><strong>注意：训练时噪音的严重程度是和时间步有关的，加噪过程是按照noisy 和 orig_imag 加权平均得到的，时间步越小加的噪音越小</strong> <br></p><ul><li>具体的加噪过程如下: <br></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> add_noise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    self,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    original_samples: torch.FloatTensor,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    noise: torch.FloatTensor,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    timesteps: torch.IntTensor,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -&gt; torch.FloatTensor:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Make sure alphas_cumprod and timestep have same device and dtype as original_samples</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alphas_cumprod </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.alphas_cumprod.to(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">device</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">original_samples.device, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">dtype</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">original_samples.dtype)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    timesteps </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timesteps.to(original_samples.device)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sqrt_alpha_prod </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> alphas_cumprod[timesteps] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sqrt_alpha_prod </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sqrt_alpha_prod.flatten()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    while</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sqrt_alpha_prod.shape) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(original_samples.shape):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        sqrt_alpha_prod </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sqrt_alpha_prod.unsqueeze(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sqrt_one_minus_alpha_prod </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> alphas_cumprod[timesteps]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sqrt_one_minus_alpha_prod </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sqrt_one_minus_alpha_prod.flatten()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    while</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sqrt_one_minus_alpha_prod.shape) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(original_samples.shape):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        sqrt_one_minus_alpha_prod </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sqrt_one_minus_alpha_prod.unsqueeze(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    noisy_samples </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sqrt_alpha_prod </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> original_samples </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sqrt_one_minus_alpha_prod </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> noise</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> noisy_samples</span></span></code></pre></div><h2 id="_3-3-sd-推理流程图" tabindex="-1">3.3 sd 推理流程图 <a class="header-anchor" href="#_3-3-sd-推理流程图" aria-label="Permalink to &quot;3.3 sd 推理流程图&quot;">​</a></h2><p><img src="https://tianfeng.space/wp-content/uploads/2023/05/uTools_1685589132904.png" alt="推理流程图"></p><h2 id="_3-4-clip-原理图" tabindex="-1">3.4 clip 原理图 <a class="header-anchor" href="#_3-4-clip-原理图" aria-label="Permalink to &quot;3.4 clip 原理图&quot;">​</a></h2><p><img src="https://tianfeng.space/wp-content/uploads/2023/05/clip_loss.png" alt="clip loss image"></p><p><img src="https://tianfeng.space/wp-content/uploads/2023/05/2d30e1b26b5f6cece70a65f34423a84c.png" alt="clip inference image"></p><h2 id="_3-5-latent-space" tabindex="-1">3.5 latent space <a class="header-anchor" href="#_3-5-latent-space" aria-label="Permalink to &quot;3.5 latent space&quot;">​</a></h2><p><img src="https://tianfeng.space/wp-content/uploads/2023/05/77ddca794cf2ee7a88dc52febd144e89.jpeg" alt="latent space"></p><h2 id="_3-6-noiser-and-denoiser" tabindex="-1">3.6 noiser and denoiser <a class="header-anchor" href="#_3-6-noiser-and-denoiser" aria-label="Permalink to &quot;3.6 noiser and denoiser&quot;">​</a></h2><p><img src="https://tianfeng.space/wp-content/uploads/2023/05/uTools_1685523354770.png" alt="noiser"></p><p><img src="https://tianfeng.space/wp-content/uploads/2023/05/uTools_1685527975029.png" alt="denoiser"></p><h1 id="_4-stable-diffusion-具体模型结构" tabindex="-1">4 stable diffusion 具体模型结构 <a class="header-anchor" href="#_4-stable-diffusion-具体模型结构" aria-label="Permalink to &quot;4 stable diffusion 具体模型结构&quot;">​</a></h1><h2 id="_4-1-clip-结构" tabindex="-1">4.1 clip 结构 <a class="header-anchor" href="#_4-1-clip-结构" aria-label="Permalink to &quot;4.1 clip 结构&quot;">​</a></h2><p><img src="https://pic3.zhimg.com/80/v2-46fcafb5a14d108cd29d2751e453a142_720w.webp" alt="clip 模型"></p><h2 id="_4-2-vae-模型结构" tabindex="-1">4.2 vae 模型结构 <a class="header-anchor" href="#_4-2-vae-模型结构" aria-label="Permalink to &quot;4.2 vae 模型结构&quot;">​</a></h2><p><img src="https://pic1.zhimg.com/80/v2-a390d53cc59c0e76b0bbc86864f226ac_1440w.webp" alt="vae 模型结构"></p><h2 id="_4-2-unet-base-模型结构图" tabindex="-1">4.2 unet-base 模型结构图 <a class="header-anchor" href="#_4-2-unet-base-模型结构图" aria-label="Permalink to &quot;4.2 unet-base 模型结构图&quot;">​</a></h2><p><img src="https://pic2.zhimg.com/v2-8fafb5695089ea1d9fa8a5217877bd65_r.jpg" alt="unet base 模型结构图"></p><p><img src="https://pic2.zhimg.com/v2-48e96bb44d1888ce1e2725cd50c95315_r.jpg" alt="unet shape 图"></p><p><img src="https://tianfeng.space/wp-content/uploads/2023/06/18001153_64149149a7eb377271.png" alt="unet 展开图"></p><h1 id="_5-评价指标" tabindex="-1">5 评价指标 <a class="header-anchor" href="#_5-评价指标" aria-label="Permalink to &quot;5 评价指标&quot;">​</a></h1><h2 id="_5-1-clip-score" tabindex="-1">5.1 clip score <a class="header-anchor" href="#_5-1-clip-score" aria-label="Permalink to &quot;5.1 clip score&quot;">​</a></h2><p>        Clip score是指将文本和图像对输入到OpenAI的CLIP（Contrastive Language-Image Pre-training）模型后分别转换为特征向量，然后计算它们之间的余弦相似度。当CLIP Score较高时，图像-文本对之间的相关性更高。CLIP Score评估自然语言(Promote 文本)和图像对之间的匹配度和相关性。值越大（接近1），评估越高。<br> ，</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>L</mi><mi>I</mi><mi>P</mi><mo>−</mo><mi>S</mi><mi>C</mi><mi>O</mi><mi>R</mi><mi>E</mi><mo>(</mo><mrow><mi mathvariant="bold">c</mi></mrow><mo separator="true">,</mo><mrow><mi mathvariant="bold">v</mi></mrow><mo>)</mo><mo>=</mo><mi>w</mi><mo>∗</mo><mi>max</mi><mo>(</mo><mi>cos</mi><mo>(</mo><mrow><mi mathvariant="bold">c</mi></mrow><mo separator="true">,</mo><mrow><mi mathvariant="bold">v</mi></mrow><mo>)</mo><mo separator="true">,</mo><mn>0</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">CLIP-SCORE(\\mathbf{c}, \\mathbf{v})=w * \\max (\\cos (\\mathbf{c}, \\mathbf{v}), 0) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="mord mathit">L</span><span class="mord mathit" style="margin-right:0.07847em;">I</span><span class="mord mathit" style="margin-right:0.13889em;">P</span><span class="mbin">−</span><span class="mord mathit" style="margin-right:0.05764em;">S</span><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="mord mathit" style="margin-right:0.02778em;">O</span><span class="mord mathit" style="margin-right:0.00773em;">R</span><span class="mord mathit" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord displaystyle textstyle uncramped"><span class="mord mathbf">c</span></span><span class="mpunct">,</span><span class="mord displaystyle textstyle uncramped"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="mclose">)</span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="mbin">∗</span><span class="mop">max</span><span class="mopen">(</span><span class="mop">cos</span><span class="mopen">(</span><span class="mord displaystyle textstyle uncramped"><span class="mord mathbf">c</span></span><span class="mpunct">,</span><span class="mord displaystyle textstyle uncramped"><span class="mord mathbf" style="margin-right:0.01597em;">v</span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mord mathrm">0</span><span class="mclose">)</span></span></span></span></span></p><ul><li><a href="https://aclanthology.org/2021.emnlp-main.595v2.pdf" target="_blank" rel="noreferrer">论文链接</a></li></ul><h2 id="_5-2-fid" tabindex="-1">5.2 FID <a class="header-anchor" href="#_5-2-fid" aria-label="Permalink to &quot;5.2 FID&quot;">​</a></h2><p>        FID(Fréchet Inception Distance) score 是一种用于评估生成图像质量的度量标准，专门用于评估模型生成图片的性能，FID可以衡量生成图像的逼真度(image fidelity), 计算公式如下所示：<br></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>I</mi><mi>D</mi><mo>(</mo><mi>p</mi><mo separator="true">,</mo><mi>q</mi><mo>)</mo><mo>=</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>μ</mi><mrow><mi>p</mi></mrow></msub><mo>−</mo><msub><mi>μ</mi><mrow><mi>q</mi></mrow></msub><mi mathvariant="normal">∣</mi><msup><mi mathvariant="normal">∣</mi><mrow><mn>2</mn></mrow></msup><mo>+</mo><mi>T</mi><mi>r</mi><mo>(</mo><msub><mi>C</mi><mrow><mi>p</mi></mrow></msub><mo>+</mo><msub><mi>C</mi><mrow><mi>q</mi></mrow></msub><mo>−</mo><mn>2</mn><msqrt><mrow><msub><mi>C</mi><mrow><mi>p</mi></mrow></msub><msub><mi>C</mi><mrow><mi>q</mi></mrow></msub></mrow></msqrt><mo>)</mo></mrow><annotation encoding="application/x-tex">FID(p, q)=||\\mu_{p}-\\mu_{q}||^{2} + Tr(C_{p} + C_{q} - 2 \\sqrt{C_{p} C_{q}}) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.9324910000000001em;"></span><span class="strut bottom" style="height:1.24001em;vertical-align:-0.30751899999999993em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord mathit" style="margin-right:0.13889em;">F</span><span class="mord mathit" style="margin-right:0.07847em;">I</span><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathit">p</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord mathrm">∣</span><span class="mord mathrm">∣</span><span class="mord"><span class="mord mathit">μ</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">p</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">−</span><span class="mord"><span class="mord mathit">μ</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03588em;">q</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathrm">∣</span><span class="mord"><span class="mord mathrm">∣</span><span class="vlist"><span style="top:-0.413em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">p</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03588em;">q</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">−</span><span class="mord mathrm">2</span><span class="sqrt mord"><span class="sqrt-sign" style="top:-0.042491000000000057em;"><span class="style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">√</span></span></span><span class="vlist"><span style="top:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord displaystyle textstyle cramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">p</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03588em;">q</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span><span style="top:-0.852491em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span>​</span></span></span><span class="mclose">)</span></span></span></span></span></p><p>        其中, p 表示真实图像的分布, q 表示生成图像的分布, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>μ</mi><mrow><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\\mu_{p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">μ</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">p</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>μ</mi><mrow><mi>q</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\\mu_{q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">μ</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03588em;">q</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> 分别表示两个分布的特征向量的均值, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">p</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>q</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03588em;">q</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> 分别表示两个分布的特征向量的协方差矩阵。Tr 表示矩阵的迹运算, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>⋅</mo><mtext> </mtext><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mrow><mn>2</mn></mrow></msub></mrow><annotation encoding="application/x-tex">|| \\cdot\\ ||_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">∣</span><span class="mord mathrm">∣</span><span class="mbin">⋅</span><span class="mord mspace"> </span><span class="mord mathrm">∣</span><span class="mord"><span class="mord mathrm">∣</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> 表示欧几里得范数。<br></p><p>        具体来说, FID首先用 Inception network提取真实数据和生成数据的特征向量, 然后计算这两个特征向量集合的均值 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>μ</mi><mrow><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">\\mu_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">μ</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> , <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>μ</mi><mrow><mn>2</mn></mrow></msub></mrow><annotation encoding="application/x-tex">\\mu_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">μ</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> 和协方差矩阵 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Σ</mi><mrow><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">\\Sigma_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathrm">Σ</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> , <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Σ</mi><mrow><mn>2</mn></mrow></msub></mrow><annotation encoding="application/x-tex">\\Sigma_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathrm">Σ</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> 。最后计算上述公式得到 FID值。<br></p><p>FID 值越低代表两个分布越相似,生成的数据与真实数据分布越相似。<br></p><h1 id="_6-sd-进阶" tabindex="-1">6 sd 进阶 <a class="header-anchor" href="#_6-sd-进阶" aria-label="Permalink to &quot;6 sd 进阶&quot;">​</a></h1><h2 id="_6-1-sd2-之前版本异同" tabindex="-1">6.1 sd2 之前版本异同 <a class="header-anchor" href="#_6-1-sd2-之前版本异同" aria-label="Permalink to &quot;6.1 sd2 之前版本异同&quot;">​</a></h2><ul><li>SD v1.1：在laion2B-en数据集上以256x256大小训练237,000步，上面我们已经说了，laion2B-en数据集中256以上的样本量共1324M；然后在laion5B的高分辨率数据集以512x512尺寸训练194,000步，这里的高分辨率数据集是图像尺寸在1024x1024以上，共170M样本。</li><li>SD v1.2：以SD v1.1为初始权重，在improved_aesthetics_5plus数据集上以512x512尺寸训练515,000步数，这个improved_aesthetics_5plus数据集上laion2B-en数据集中美学评分在5分以上的子集（共约600M样本），注意这里过滤了含有水印的图片（pwatermark&gt;0.5)以及图片尺寸在512x512以下的样本。</li><li>SD v1.3：以SD v1.2为初始权重，在improved_aesthetics_5plus数据集上继续以512x512尺寸训练195,000步数，不过这里采用了CFG（以10%的概率随机drop掉text）。</li><li>SD v1.4：以SD v1.2为初始权重，在improved_aesthetics_5plus数据集上采用CFG以512x512尺寸训练225,000步数。</li><li>SD v1.5：以SD v1.2为初始权重，在improved_aesthetics_5plus数据集上采用CFG以512x512尺寸训练595,000步数。</li><li>SD 2.0：采用了更大的text encoder：基于OpenCLIP在laion-2b数据集上训练的CLIP ViT-H/14模型，其参数量为354.03M，相比原来的text encoder(CLIP ViT-L/14)模型大了约3倍.</li><li>SD 2.0 UNet: 相比SD 1.x几乎没有改变，就是由于换了CLIP模型，cross attention dimension从原来的768变成了1024, 不同stage的attention模块是固定attention head dim为64;</li><li>SD 2.0 : 除了512x512版本的模型，还包括768x768版本的模型;</li><li>SD 2.0 768x768 模型 : 在512x512模型基础上用图像分辨率大于768x768的子集继续训练, 优化目标不再是noise_prediction，而是采用<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2202.00512" target="_blank" rel="noreferrer">v-objective</a></li><li>SD 2.1 : SD 2.1是在SD 2.0的基础上放开了限制(降低审查标准punsafe=0.98) 继续finetune，所以增强了人像的生成效果。</li><li>SD unCLIP : 是在原来的SD模型的基础上增加了CLIP的image encoder的nosiy image embeddings作为condition。</li></ul><h2 id="_6-2-从-sd-到-sdxl" tabindex="-1">6.2 从 SD 到 SDXL <a class="header-anchor" href="#_6-2-从-sd-到-sdxl" aria-label="Permalink to &quot;6.2 从 SD 到 SDXL&quot;">​</a></h2><p>        SDXL 的第一个 stage 采用的是普通的 DownBlock，而不是基于 attention 的 CrossAttnDownBlock。此外，SDXL 只用了 3 个 stage，只进行了两次 2x 下采样，而之前的 SD 使用 4 个 stage，包含 3 个 2x 下采样。<br>         SDXL 中 stage2 和 stage3 的两个 CrossAttnDownBlock 中的 transformer block 数量分别为 2 和 10，并且中间的 CrossAttnMidBlock 的 transformer blocks 数量也为 10。<br></p><p><img src="http://img.zh0ngtian.tech/2023_12_09_78v5rWA.png" alt="UNet"></p><h1 id="_6-参考链接" tabindex="-1">6 参考链接 <a class="header-anchor" href="#_6-参考链接" aria-label="Permalink to &quot;6 参考链接&quot;">​</a></h1><ul><li><a href="https://tianfeng.space/1363.html" target="_blank" rel="noreferrer">链接1</a></li><li><a href="http://www.zh0ngtian.tech/posts/c04f0a05.html" target="_blank" rel="noreferrer">参考链接</a></li><li><a href="https://www.nowcoder.com/discuss/522779444121960448" target="_blank" rel="noreferrer">sd 精讲</a></li><li><a href="https://zhuanlan.zhihu.com/p/642354007" target="_blank" rel="noreferrer">参考4</a></li><li><a href="https://zhuanlan.zhihu.com/p/632809634" target="_blank" rel="noreferrer">深入浅出完整解析Stable Diffusion（SD）核心基础知识</a></li><li><a href="https://zhuanlan.zhihu.com/p/642354007" target="_blank" rel="noreferrer">深入浅出完整解析Stable Diffusion中U-Net的前世今生与核心知识</a></li><li><a href="https://zhuanlan.zhihu.com/p/643420260" target="_blank" rel="noreferrer">sdxl</a></li></ul>`,50)]))}const g=a(i,[["render",p]]);export{d as __pageData,g as default};
